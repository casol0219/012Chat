# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './ui/012Chat_private.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from os import environ
from PyQt5 import QtCore, QtGui, QtWidgets
import widget_emoji
from server import *
from client import *
import sys

#해상도 설정 start
def suppress_qt_warnings():
    environ["QT_DEVICE_PIXEL_RATIO"] = "0"
    environ["QT_AUTO_SCREEN_SCALE_FACTOR"] = "1"
    environ["QT_SCREEN_SCALE_FACTORS"] = "1"
    environ["QT_SCALE_FACTOR"] = "1"
#해상도 설정 end

class Ui_Dialog(QtWidgets.QDialog):
    def __init__(self):
        super().__init__()
        #1:1 대화상대
        self.target = None
        self.setupUi()
        

    def setupUi(self):
        self.setObjectName("Dialog")
        self.resize(900, 832)
        self.setWindowTitle("Dialog")
        self.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"font: 75 10pt \"SEBANG Gothic\";")
        self.Text_ChatTarget = QtWidgets.QLabel(self)
        self.Text_ChatTarget.setGeometry(QtCore.QRect(72, 17, 701, 20))
        self.Text_ChatTarget.setStyleSheet("font-size: 12pt;")
        #1:1 대화상대 표시
        self.Text_ChatTarget.setText(f"<html><head/><body><p>Chat : {self.target}</p></body></html>")
        self.Text_ChatTarget.setTextFormat(QtCore.Qt.AutoText)
        self.Text_ChatTarget.setScaledContents(False)
        self.Text_ChatTarget.setObjectName("Text_ChatTarget")
        self.Bg_ChatArea = QtWidgets.QLabel(self)
        self.Bg_ChatArea.setGeometry(QtCore.QRect(0, 56, 900, 721))
        self.Bg_ChatArea.setText("")
        self.Bg_ChatArea.setPixmap(QtGui.QPixmap(":/layout/ChatFrame.png"))
        self.Bg_ChatArea.setObjectName("Bg_ChatArea")
        self.Btn_send = QtWidgets.QPushButton(self)
        self.Btn_send.setGeometry(QtCore.QRect(824, 793, 24, 24))
        self.Btn_send.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"selection-background-color: rgb(255, 255, 255);\n"
"border-image: url(:/icon/send.png);")
        self.Btn_send.setText("")
        self.Btn_send.setObjectName("Btn_send")
        #전송 버튼 함수연결 start
        self.Btn_send.clicked.connect(self.send)
        #전송 버튼 함수연결 end
        self.Bg_Input = QtWidgets.QLabel(self)
        self.Bg_Input.setGeometry(QtCore.QRect(0, 777, 900, 56))
        self.Bg_Input.setText("")
        self.Bg_Input.setPixmap(QtGui.QPixmap(":/layout/Footer.png"))
        self.Bg_Input.setObjectName("Bg_Input")
        self.Bg_Header = QtWidgets.QLabel(self)
        self.Bg_Header.setGeometry(QtCore.QRect(0, 0, 900, 56))
        self.Bg_Header.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Bg_Header.setText("")
        self.Bg_Header.setPixmap(QtGui.QPixmap(":/layout/Header.png"))
        self.Bg_Header.setObjectName("Bg_Header")
        self.scrollArea = QtWidgets.QScrollArea(self)
        self.scrollArea.setGeometry(QtCore.QRect(0, 56, 890, 716))
        self.scrollArea.setMinimumSize(QtCore.QSize(890, 716))
        self.scrollArea.setMaximumSize(QtCore.QSize(890, 716))
        self.scrollArea.setStyleSheet("* {\n"
"    border-style: none;\n"
"    background-color: #F1F8F9;\n"
"}\n"
"QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"QScrollBar::add-page:vertical {\n"
"    background: none;\n"
"}\n"
"QScrollBar:vertical {\n"
"    border-style: none;\n"
"    background:#F1F8F9;\n"
"    width:12px;    \n"
"    margin: 0px 0px 0px 0px;\n"
"}\n"
"QScrollBar::handle:vertical {         \n"
"    min-height: 0px;\n"
"    border-style: none;\n"
"    border-radius: 5px;\n"
"    background-color: #A1D0D4;\n"
"}\n"
"QScrollBar::add-line:vertical {       \n"
"    height: 0px;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 0 px;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}")
        self.scrollArea.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 870, 716))
        self.scrollAreaWidgetContents.setMinimumSize(QtCore.QSize(870, 688))
        self.scrollAreaWidgetContents.setMaximumSize(QtCore.QSize(870, 16777215))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout.setObjectName("gridLayout")
        self.Text_Chat = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.Text_Chat.setText("<html><head/><body><p>Name(date):<br>contents</p></body></html>")
        self.Text_Chat.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.Text_Chat.setWordWrap(True)
        self.Text_Chat.setObjectName("Text_Chat")
        self.gridLayout.addWidget(self.Text_Chat, 0, 0, 1, 1)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.Input_inputBox = QtWidgets.QPlainTextEdit(self)
        self.Input_inputBox.setGeometry(QtCore.QRect(80, 790, 724, 30))
        self.Input_inputBox.setMinimumSize(QtCore.QSize(724, 30))
        self.Input_inputBox.setStyleSheet("QPlainTextEdit {\n"
"    border-style: none;\n"
"    font-size: 12pt;\n"
"    color: #495057;\n"
"}")
        self.Input_inputBox.setPlainText("")
        self.Input_inputBox.setPlaceholderText("Text here...")
        self.Input_inputBox.setObjectName("Input_inputBox")
        self.Btn_emoji = QtWidgets.QPushButton(self)
        self.Btn_emoji.setGeometry(QtCore.QRect(40, 793, 24, 24))
        self.Btn_emoji.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"selection-background-color: rgb(255, 255, 255);\n"
"border-image: url(:/icon/emoji-happy.png);")
        self.Btn_emoji.setText("")
        self.Btn_emoji.setObjectName("Btn_emoji")
        #이모티콘 버튼 함수연결 start
        self.Btn_emoji.clicked.connect(self.openEmoji)
        #이모티콘 버튼 함수연결 end
        self.Bg_Input.raise_()
        self.Bg_ChatArea.raise_()
        self.Btn_emoji.raise_()
        self.Bg_Header.raise_()
        self.Btn_send.raise_()
        self.scrollArea.raise_()
        self.Text_ChatTarget.raise_()
        self.Input_inputBox.raise_()

        self.retranslateUi(self)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self, Dialog):
        pass
    
    #서버로 부터 이모티콘 이름 받으면 Text_Chat에 출력
    #def show_emogi(self, filename):

    #서버로 부터 받은 닉네임, 데이터, 보낸 시간 Text_Chat에 출력 (아직 안됨..)
    def print_data(self, sender, data, dataTime):
        display_text = f"Sender: {sender}\nData: {data}\nTime: {dataTime}"
        self.content5.setText(display_text)


    #메시지 서버로 보내기(엔터 치면 보내지는 것도 구현해야 함 - 아직은 버튼 클릭으로만 보내짐)
    def send(self):
        message = self.Input_inputBox.toPlainText()
        if message:    
            send_message(message)  
            self.Input_inputBox.clear()  #메시지 보낸 후 입력창 비우기
    def openEmoji(self):
        if self.emojiWidget is None:
            self.emojiWidget = widget_emoji.Ui_Form()
        self.emojiWidget.show()

import resource_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = Ui_Dialog()
    Dialog.show()
    sys.exit(app.exec_())
