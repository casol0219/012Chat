# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './ui/012Chat.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from os import environ,fspath
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt, QObject, pyqtSlot, QDir
import dialog_gui1, dialog_exit, widget_emoji
from client import *
import sys

#해상도 설정 start
def suppress_qt_warnings():
    environ["QT_DEVICE_PIXEL_RATIO"] = "0"
    environ["QT_AUTO_SCREEN_SCALE_FACTOR"] = "1"
    environ["QT_SCREEN_SCALE_FACTORS"] = "1"
    environ["QT_SCALE_FACTOR"] = "1"
#해상도 설정 end

def load_fonts_from_dir(directory):
    families = set()
    for fi in QDir(directory).entryInfoList(["*.ttf", "*.woff", "*.woff2"]):
        _id = QtGui.QFontDatabase.addApplicationFont(fi.absoluteFilePath())
        families |= set(QtGui.QFontDatabase.applicationFontFamilies(_id))
    return families

#엔터치면 메시지 보내기
class CustomPlainTextEdit(QtWidgets.QPlainTextEdit):
    def __init__(self, main_window, parent=None):
        super().__init__(parent)
        self.main_window = main_window

    def keyPressEvent(self, e):
        if e.key() in (Qt.Key_Enter, Qt.Key_Return):
            self.main_window.send()
        else:
            super().keyPressEvent(e)

class Ui_MainWindow(QtWidgets.QMainWindow):
    # 새로운 신호 정의
    receivedData = QtCore.pyqtSignal(str)

    #__init__ start
    def __init__(self):
        super().__init__()
        self.initUI()
        self.port = my_portNum()
        self.fontDB = QtGui.QFontDatabase()
        font_dir = ":/font"
        self.families = list(load_fonts_from_dir(fspath(font_dir)))
        self.setFont(QtGui.QFont(self.families[0], 10))
        self.nickname = None
        self.status = "Online"
        self.emojiWidget = None
        self.Text_myName = None
        self.executeChangeNickname()
        # 신호를 슬롯에 연결
        self.receivedData.connect(self.print_data)
    
    def initUI(self):
        connect_to_server(self,update_ui_with_data)

    # 메인 윈도우가 닫힐 때 호출되는 메서드
    def closeEvent(self):
        close_connection()
    
    #__init__ end
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1280, 832)
        MainWindow.setMinimumSize(QtCore.QSize(1280, 832))
        MainWindow.setMaximumSize(QtCore.QSize(1280, 832))
        MainWindow.setWindowTitle("MainWindow")
        MainWindow.setStyleSheet("* {\n"
"    color: #343a40;\n"
"}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setMinimumSize(QtCore.QSize(1280, 832))
        self.centralwidget.setMaximumSize(QtCore.QSize(1280, 832))
        self.centralwidget.setObjectName("centralwidget")
        self.Bg_Sidebar = QtWidgets.QLabel(self.centralwidget)
        self.Bg_Sidebar.setEnabled(True)
        self.Bg_Sidebar.setGeometry(QtCore.QRect(0, 0, 380, 832))
        self.Bg_Sidebar.setMinimumSize(QtCore.QSize(380, 832))
        self.Bg_Sidebar.setMaximumSize(QtCore.QSize(380, 832))
        self.Bg_Sidebar.setText("")
        self.Bg_Sidebar.setPixmap(QtGui.QPixmap(":/layout/Sidebar.png"))
        self.Bg_Sidebar.setScaledContents(False)
        self.Bg_Sidebar.setObjectName("Bg_Sidebar")
        self.Bg_Header = QtWidgets.QLabel(self.centralwidget)
        self.Bg_Header.setGeometry(QtCore.QRect(380, 0, 900, 56))
        self.Bg_Header.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Bg_Header.setText("")
        self.Bg_Header.setPixmap(QtGui.QPixmap(":/layout/Header.png"))
        self.Bg_Header.setObjectName("Bg_Header")
        self.Bg_ChatArea = QtWidgets.QLabel(self.centralwidget)
        self.Bg_ChatArea.setGeometry(QtCore.QRect(380, 56, 900, 721))
        self.Bg_ChatArea.setText("")
        self.Bg_ChatArea.setPixmap(QtGui.QPixmap(":/layout/ChatFrame.png"))
        self.Bg_ChatArea.setObjectName("Bg_ChatArea")
        self.Bg_Input = QtWidgets.QLabel(self.centralwidget)
        self.Bg_Input.setGeometry(QtCore.QRect(380, 777, 900, 56))
        self.Bg_Input.setText("")
        self.Bg_Input.setPixmap(QtGui.QPixmap(":/layout/Footer.png"))
        self.Bg_Input.setObjectName("Bg_Input")
        self.Btn_emoji = QtWidgets.QPushButton(self.centralwidget)
        self.Btn_emoji.setGeometry(QtCore.QRect(424, 793, 24, 24))
        self.Btn_emoji.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"selection-background-color: rgb(255, 255, 255);\n"
"border-image: url(:/icon/emoji-happy.png);")
        self.Btn_emoji.setText("")
        self.Btn_emoji.setObjectName("Btn_emoji")
        #이모티콘 버튼 함수연결 start
        self.Btn_emoji.clicked.connect(self.openEmoji)
        #이모티콘 버튼 함수연결 end
        self.Input_inputBox = CustomPlainTextEdit(self, self.centralwidget)
        self.Input_inputBox.setGeometry(QtCore.QRect(460, 790, 724, 30))
        self.Input_inputBox.setStyleSheet("QPlainTextEdit {\n"
"    border-style: none;\n"
"    color: #495057;\n"
"}")
        self.Input_inputBox.setFont(QtGui.QFont(self.families[0], 12))
        self.Input_inputBox.setPlainText("")
        self.Input_inputBox.setPlaceholderText("Text here...")
        self.Input_inputBox.setObjectName("Input_inputBox")
        self.Btn_send = QtWidgets.QPushButton(self.centralwidget)
        self.Btn_send.setGeometry(QtCore.QRect(1208, 793, 24, 24))
        self.Btn_send.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"selection-background-color: rgb(255, 255, 255);\n"
"border-image: url(:/icon/send.png);")
        self.Btn_send.setText("")
        self.Btn_send.setObjectName("Btn_send")
        #전송 버튼 함수연결 start
        self.Btn_send.clicked.connect(self.send)
        #전송 버튼 함수연결 end
        self.Btn_exit = QtWidgets.QPushButton(self.centralwidget)
        self.Btn_exit.setGeometry(QtCore.QRect(44, 793, 24, 24))
        self.Btn_exit.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"selection-background-color: rgb(255, 255, 255);\n"
"border-image: url(:/icon/exit.png)")
        self.Btn_exit.setText("")
        self.Btn_exit.setObjectName("Btn_exit")
        #종료 버튼 함수연결 start
        self.Btn_exit.clicked.connect(self.executeExit)
        #종료 버튼 함수연결 end
        self.Text_ProfileHeader = QtWidgets.QLabel(self.centralwidget)
        self.Text_ProfileHeader.setGeometry(QtCore.QRect(76, 20, 271, 20))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Text_ProfileHeader.sizePolicy().hasHeightForWidth())
        self.Text_ProfileHeader.setSizePolicy(sizePolicy)
        self.Text_ProfileHeader.setFont(QtGui.QFont(self.families[0], 12))
        self.Text_ProfileHeader.setText("<html><head/><body><p><span>Profile</span></p></body></html>")
        self.Text_ProfileHeader.setTextFormat(QtCore.Qt.AutoText)
        self.Text_ProfileHeader.setScaledContents(False)
        self.Text_ProfileHeader.setObjectName("Text_ProfileHeader")
        self.Text_MemberHeader = QtWidgets.QLabel(self.centralwidget)
        self.Text_MemberHeader.setGeometry(QtCore.QRect(76, 210, 271, 20))
        self.Text_MemberHeader.setMidLineWidth(0)
        self.Text_MemberHeader.setFont(QtGui.QFont(self.families[0], 12))
        self.Text_MemberHeader.setText("<html><head/><body><p><span>Members</span></p></body></html>")
        self.Text_MemberHeader.setTextFormat(QtCore.Qt.AutoText)
        self.Text_MemberHeader.setScaledContents(False)
        self.Text_MemberHeader.setObjectName("Text_MemberHeader")
        self.Text_Exit = QtWidgets.QLabel(self.centralwidget)
        self.Text_Exit.setGeometry(QtCore.QRect(76, 795, 31, 20))
        self.Text_Exit.setMidLineWidth(0)
        self.Text_Exit.setFont(QtGui.QFont(self.families[0], 12))
        self.Text_Exit.setText("<html><head/><body><p><span>Exit</span></p></body></html>")
        self.Text_Exit.setTextFormat(QtCore.Qt.AutoText)
        self.Text_Exit.setScaledContents(False)
        self.Text_Exit.setObjectName("Text_Exit")
        self.Text_ChatTarget = QtWidgets.QLabel(self.centralwidget)
        self.Text_ChatTarget.setGeometry(QtCore.QRect(456, 20, 151, 20))
        self.Text_ChatTarget.setFont(QtGui.QFont(self.families[0], 12))
        self.Text_ChatTarget.setText("<html><head/><body><p><span>Chat : ALL</span></p></body></html>")
        self.Text_ChatTarget.setTextFormat(QtCore.Qt.AutoText)
        self.Text_ChatTarget.setScaledContents(False)
        self.Text_ChatTarget.setObjectName("Text_ChatTarget")
        self.Img_myProfile = QtWidgets.QLabel(self.centralwidget)
        self.Img_myProfile.setGeometry(QtCore.QRect(44, 92, 48, 48))
        self.Img_myProfile.setText("")
        self.Img_myProfile.setPixmap(QtGui.QPixmap(":/image/profile-circle.png"))
        self.Img_myProfile.setObjectName("Img_myProfile")
        self.Text_myName = QtWidgets.QLabel(self.centralwidget)
        self.Text_myName.setGeometry(QtCore.QRect(108, 100, 201, 20))
        self.Text_myName.setFont(QtGui.QFont(self.families[0], 12))
        #초기 닉네임 설정 start
        self.Text_myName.setText(f"<html><head/><body><p>{self.nickname}</p></body></html>")
        #초기 닉네임 설정 end
        self.Text_myName.setObjectName("Text_myName")
        self.Text_myStatus = QtWidgets.QLabel(self.centralwidget)
        self.Text_myStatus.setGeometry(QtCore.QRect(126, 122, 161, 20))
        self.Text_myStatus.setFont(QtGui.QFont(self.families[0], 9))
        self.Text_myStatus.setText("<html><head/><body><p><span>ONLINE</span></p></body></html>")
        self.Text_myStatus.setObjectName("Text_myStatus")
        self.Img_MyStatus = QtWidgets.QLabel(self.centralwidget)
        self.Img_MyStatus.setGeometry(QtCore.QRect(108, 125, 12, 12))
        self.Img_MyStatus.setText("")
        self.Img_MyStatus.setPixmap(QtGui.QPixmap(":/icon/OnlineDot.png"))
        self.Img_MyStatus.setObjectName("Img_MyStatus")
        self.Btn_edit = QtWidgets.QPushButton(self.centralwidget)
        self.Btn_edit.setGeometry(QtCore.QRect(320, 100, 20, 20))
        self.Btn_edit.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.Btn_edit.setStyleSheet("background-color: #F4F0FD;\n"
"selection-background-color: #F4F0FD;\n"
"border-image: url(:/icon/edit.png)")
        self.Btn_edit.setText("")
        self.Btn_edit.setObjectName("Btn_edit")
        #닉네임 편집버튼 함수연결 start
        self.Btn_edit.clicked.connect(self.executeChangeNickname)
        #닉네임 편집버튼 함수연결 end
        self.memberTable = QtWidgets.QListWidget(self.centralwidget)
        self.memberTable.setGeometry(QtCore.QRect(44, 262, 311, 498))
        self.memberTable.setFont(QtGui.QFont(self.families[0], 11))
        self.memberTable.setStyleSheet("QListWidget {\n"
"    border-style: none;\n"
"}\n"
"QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"QScrollBar::add-page:vertical {\n"
"    background: none;\n"
"}\n"
"QScrollBar:vertical {\n"
"    border-style: none;\n"
"    background:white;\n"
"    width:13px;    \n"
"    margin: 0px 0px 0px 0px;\n"
"}\n"
"QScrollBar::handle:vertical {         \n"
"    min-height: 0px;\n"
"    border-style: none;\n"
"    border-radius: 5px;\n"
"    background-color: #6F3FE2;\n"
"}\n"
"QScrollBar::add-line:vertical {       \n"
"    height: 0px;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 0 px;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"")
        self.memberTable.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.memberTable.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerItem)
        self.memberTable.setObjectName("memberTable")

        self.scrollArea = QtWidgets.QScrollArea(self.centralwidget)
        self.scrollArea.setGeometry(QtCore.QRect(390, 56, 890, 716))
        self.scrollArea.setMinimumSize(QtCore.QSize(890, 716))
        self.scrollArea.setMaximumSize(QtCore.QSize(890, 716))
        self.scrollArea.setStyleSheet("* {\n"
"    border-style: none;\n"
"    background-color: #F1F8F9;\n"
"}\n"
"QScrollBar::sub-page:vertical {\n"
"    background: none;\n"
"}\n"
"QScrollBar::add-page:vertical {\n"
"    background: none;\n"
"}\n"
"QScrollBar:vertical {\n"
"    border-style: none;\n"
"    background:#F1F8F9;\n"
"    width:12px;    \n"
"    margin: 0px 0px 0px 0px;\n"
"}\n"
"QScrollBar::handle:vertical {         \n"
"    min-height: 0px;\n"
"    border-style: none;\n"
"    border-radius: 5px;\n"
"    background-color: #A1D0D4;\n"
"}\n"
"QScrollBar::add-line:vertical {       \n"
"    height: 0px;\n"
"    subcontrol-position: bottom;\n"
"    subcontrol-origin: margin;\n"
"}\n"
"QScrollBar::sub-line:vertical {\n"
"    height: 0 px;\n"
"    subcontrol-position: top;\n"
"    subcontrol-origin: margin;\n"
"}")
        self.scrollArea.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 870, 716))
        self.scrollAreaWidgetContents.setMinimumSize(QtCore.QSize(870, 688))
        self.scrollAreaWidgetContents.setMaximumSize(QtCore.QSize(870, 16777215))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.gridLayout = QtWidgets.QGridLayout(self.scrollAreaWidgetContents)
        self.gridLayout.setObjectName("gridLayout")

        self.Text_Chat = QtWidgets.QTextEdit(self.scrollAreaWidgetContents)
        self.Text_Chat.setReadOnly(True)
        self.Text_Chat.setFont(QtGui.QFont(self.families[0], 11))
        self.Text_Chat.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.Text_Chat.setObjectName("Text_Chat")
        self.gridLayout.addWidget(self.Text_Chat, 0, 0, 1, 1)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.Bg_Input.raise_()
        self.Bg_Sidebar.raise_()
        self.Bg_Header.raise_()
        self.Bg_ChatArea.raise_()
        self.Btn_emoji.raise_()
        self.Input_inputBox.raise_()
        self.Btn_send.raise_()
        self.Btn_exit.raise_()
        self.Text_ProfileHeader.raise_()
        self.Text_MemberHeader.raise_()
        self.Text_Exit.raise_()
        self.Text_ChatTarget.raise_()
        self.Img_myProfile.raise_()
        self.Text_myName.raise_()
        self.Text_myStatus.raise_()
        self.Img_MyStatus.raise_()
        self.Btn_edit.raise_()
        self.memberTable.raise_()
        self.scrollArea.raise_()
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        __sortingEnabled = self.memberTable.isSortingEnabled()
        self.memberTable.setSortingEnabled(False)
        self.memberTable.setSortingEnabled(__sortingEnabled)

    #서버로부터 받은 데이터 대화창에 출력
    def print_data(self, display_text):
        Data = display_text.split('\n')[1]
        emogi_data = display_text.split('\n')[0]
    
        #이모티콘 출력
        if '.png' in Data:
            emoji_path = f":/emoji/{Data}"      #이미지 경로
            img_tag = f'<img src="{emoji_path}" width="100" height="100"><br><br>'
            self.Text_Chat.append(emogi_data)
            self.Text_Chat.insertHtml("<br><br>")
            self.Text_Chat.insertHtml(img_tag)
        else:
            self.Text_Chat.insertHtml("<br>")
            self.Text_Chat.append(display_text)
            self.Text_Chat.insertHtml("<br><br>")

        #메시지 창이 가득 차면 자동으로 아래로 스크롤
        scrollbar = self.Text_Chat.verticalScrollBar()
        scrollbar.setValue(scrollbar.maximum())

    #메시지 서버로 보내기
    def send(self):
        message = self.Input_inputBox.toPlainText()
        if message:    
            send_message(message)  
            self.Input_inputBox.clear()  #메시지 보낸 후 입력창 비우기

    def executeChangeNickname(self):
        changeDialog = dialog_gui1.Ui_Dialog()
        if changeDialog.exec_(): #닉네임변경 팝업 열기 & yes 클릭 시
            tmp_nickname = changeDialog.Input_text.text()
            changing_nickname(tmp_nickname)
        else: #no 클릭 시
            if not self.nickname: #첫 팝업:닉네임 설정(취소선택시)
                self.nickname = "Noname"+self.port # 초기 닉네임 설정(Noname+포트번호)
                changing_nickname(self.nickname)
                #setText할 필요X

    def executeExit(self):
        exitDialog = dialog_exit.Ui_Dialog_Exit()
        if exitDialog.exec_():
            QtWidgets.QApplication.quit()

    def openEmoji(self):
        if self.emojiWidget is None:
            self.emojiWidget = widget_emoji.Ui_Form()
        self.emojiWidget.show()

    #접속자 목록 업데이트
def update_ui_with_data(data):
    ui.receivedData.emit(data)

import resource_rc

if __name__ == "__main__":
    import sys
    suppress_qt_warnings()
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
